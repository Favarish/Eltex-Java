/*
 * This file is generated by jOOQ.
 */
package ru.eltex.database.tables;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.eltex.database.DefaultSchema;
import ru.eltex.database.tables.records.JoinmanagersalestableRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Joinmanagersalestable extends TableImpl<JoinmanagersalestableRecord> {

    private static final long serialVersionUID = 1354056331;

    /**
     * The reference instance of <code>joinManagerSalesTable</code>
     */
    public static final Joinmanagersalestable JOINMANAGERSALESTABLE = new Joinmanagersalestable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JoinmanagersalestableRecord> getRecordType() {
        return JoinmanagersalestableRecord.class;
    }

    /**
     * The column <code>joinManagerSalesTable.idManager</code>.
     */
    public final TableField<JoinmanagersalestableRecord, Integer> IDMANAGER = createField("idManager", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>joinManagerSalesTable.idSale</code>.
     */
    public final TableField<JoinmanagersalestableRecord, Integer> IDSALE = createField("idSale", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>joinManagerSalesTable</code> table reference
     */
    public Joinmanagersalestable() {
        this(DSL.name("joinManagerSalesTable"), null);
    }

    /**
     * Create an aliased <code>joinManagerSalesTable</code> table reference
     */
    public Joinmanagersalestable(String alias) {
        this(DSL.name(alias), JOINMANAGERSALESTABLE);
    }

    /**
     * Create an aliased <code>joinManagerSalesTable</code> table reference
     */
    public Joinmanagersalestable(Name alias) {
        this(alias, JOINMANAGERSALESTABLE);
    }

    private Joinmanagersalestable(Name alias, Table<JoinmanagersalestableRecord> aliased) {
        this(alias, aliased, null);
    }

    private Joinmanagersalestable(Name alias, Table<JoinmanagersalestableRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Joinmanagersalestable as(String alias) {
        return new Joinmanagersalestable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Joinmanagersalestable as(Name alias) {
        return new Joinmanagersalestable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Joinmanagersalestable rename(String name) {
        return new Joinmanagersalestable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Joinmanagersalestable rename(Name name) {
        return new Joinmanagersalestable(name, null);
    }
}
