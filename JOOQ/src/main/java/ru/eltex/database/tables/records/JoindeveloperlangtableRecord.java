/*
 * This file is generated by jOOQ.
 */
package ru.eltex.database.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.TableRecordImpl;

import ru.eltex.database.tables.Joindeveloperlangtable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JoindeveloperlangtableRecord extends TableRecordImpl<JoindeveloperlangtableRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 2101838945;

    /**
     * Setter for <code>joinDeveloperLangTable.idDeveloper</code>.
     */
    public void setIddeveloper(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>joinDeveloperLangTable.idDeveloper</code>.
     */
    public Integer getIddeveloper() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>joinDeveloperLangTable.idLang</code>.
     */
    public void setIdlang(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>joinDeveloperLangTable.idLang</code>.
     */
    public Integer getIdlang() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Joindeveloperlangtable.JOINDEVELOPERLANGTABLE.IDDEVELOPER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return Joindeveloperlangtable.JOINDEVELOPERLANGTABLE.IDLANG;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getIddeveloper();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component2() {
        return getIdlang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getIddeveloper();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getIdlang();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JoindeveloperlangtableRecord value1(Integer value) {
        setIddeveloper(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JoindeveloperlangtableRecord value2(Integer value) {
        setIdlang(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JoindeveloperlangtableRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JoindeveloperlangtableRecord
     */
    public JoindeveloperlangtableRecord() {
        super(Joindeveloperlangtable.JOINDEVELOPERLANGTABLE);
    }

    /**
     * Create a detached, initialised JoindeveloperlangtableRecord
     */
    public JoindeveloperlangtableRecord(Integer iddeveloper, Integer idlang) {
        super(Joindeveloperlangtable.JOINDEVELOPERLANGTABLE);

        set(0, iddeveloper);
        set(1, idlang);
    }
}
